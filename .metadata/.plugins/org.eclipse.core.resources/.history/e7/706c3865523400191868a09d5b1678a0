package curso.gesvoto.services.datos;
// Generated 19-feb-2019 15:25:53 by Hibernate Tools 5.0.6.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Roles generated by hbm2java
 */
@Entity
@Table(name = "ROLES", catalog = "votaciones")
public class Roles implements java.io.Serializable {

	private int id;
	private String rol;
	private Set<Concursos> concursoses = new HashSet<Concursos>(0);
	private Set<Usuarios> usuarioses = new HashSet<Usuarios>(0);

	public Roles() {
	}

	public Roles(int id, String rol) {
		this.id = id;
		this.rol = rol;
	}

	public Roles(int id, String rol, Set<Concursos> concursoses, Set<Usuarios> usuarioses) {
		this.id = id;
		this.rol = rol;
		this.concursoses = concursoses;
		this.usuarioses = usuarioses;
	}

	@Id

	@Column(name = "ID", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@Column(name = "ROL", nullable = false, length = 45)
	public String getRol() {
		return this.rol;
	}

	public void setRol(String rol) {
		this.rol = rol;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "roles")
	public Set<Concursos> getConcursoses() {
		return this.concursoses;
	}

	public void setConcursoses(Set<Concursos> concursoses) {
		this.concursoses = concursoses;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "USUARIOS_ROLES", catalog = "votaciones", joinColumns = {
			@JoinColumn(name = "ROLES_ID", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "USUARIOS_ID", nullable = false, updatable = false) })
	public Set<Usuarios> getUsuarioses() {
		return this.usuarioses;
	}

	public void setUsuarioses(Set<Usuarios> usuarioses) {
		this.usuarioses = usuarioses;
	}

}
